;; Analyzed by ClojureScript 1.7.170
{:use-macros {go cljs.core.async.macros}, :excludes #{}, :name qbcljs.core, :imports nil, :requires {node cljs.nodejs, cljs.nodejs cljs.nodejs, cljs.core.async cljs.core.async}, :uses {<! cljs.core.async, chan cljs.core.async, >! cljs.core.async, put! cljs.core.async}, :defs {-main {:protocol-inline nil, :meta {:file "/home/george/Dropbox/qbcljs/src/qbcljs/core.cljs", :line 16, :column 7, :end-line 16, :end-column 12, :arglists (quote ([]))}, :name qbcljs.core/-main, :variadic false, :file "/home/george/Dropbox/qbcljs/src/qbcljs/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {cljs.core.async.macros cljs.core.async.macros}, :cljs.analyzer/constants {:seen #{:else :recur}, :order [:recur :else]}, :doc nil}